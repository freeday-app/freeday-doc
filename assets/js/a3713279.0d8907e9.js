"use strict";(self.webpackChunkfreeday_doc=self.webpackChunkfreeday_doc||[]).push([[720],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return t?o.createElement(k,i(i({ref:n},c),{},{components:t})):o.createElement(k,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8997:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],l={},p="Deployment",s={unversionedId:"deployment",id:"deployment",title:"Deployment",description:"Docker",source:"@site/docs/deployment.md",sourceDirName:".",slug:"/deployment",permalink:"/docs/deployment",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Getting started",permalink:"/docs/getting-started"},next:{title:"Slack",permalink:"/docs/bot-slack"}},c={},d=[{value:"Docker",id:"docker",level:2},{value:"docker-compose.yml",id:"docker-composeyml",level:3},{value:".env",id:"env",level:3},{value:"Production",id:"production",level:2},{value:"Reverse proxy",id:"reverse-proxy",level:3},{value:"Localhost",id:"localhost",level:2},{value:"API configuration",id:"api-configuration",level:3},{value:"Slack bot",id:"slack-bot",level:3},{value:"Running Ngrok",id:"running-ngrok",level:4},{value:"Configuring Slack app",id:"configuring-slack-app",level:4}],u={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deployment"},"Deployment"),(0,a.kt)("h2",{id:"docker"},"Docker"),(0,a.kt)("p",null,"Freeday can be easily deployed using Docker images."),(0,a.kt)("p",null,"You can find below an example of ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file and its ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," companion."),(0,a.kt)("p",null,"Edit configuration as you wish then run the whole thing using ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose up -d"),"."),(0,a.kt)("h3",{id:"docker-composeyml"},"docker-compose.yml"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"version: '3'\n\nservices:\n  freeday-api:\n    image: freedayapp/freeday-api\n    container_name: freeday-api\n    restart: always\n    env_file:\n      - .env\n    networks:\n      - freeday-network\n    ports:\n      - 8787:8787\n  freeday-web:\n    image: freedayapp/freeday-web\n    container_name: freeday-web\n    restart: always\n    env_file:\n      - .env\n    networks:\n      - freeday-network\n    ports:\n      - 8788:8788\n  freeday-mongo:\n    image: mongo\n    container_name: freeday-mongo\n    restart: always\n    command: mongod --quiet --logpath /dev/null\n    networks:\n      - freeday-network\n\nnetworks:\n  freeday-network:\n    name: freeday\n")),(0,a.kt)("h3",{id:"env"},".env"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"##\n## General\n##\n\n# Freeday web front URL\n# E.g. https://sub.domain.com/ or http://localhost:8788/\nFRONT_PUBLIC_URL=https://freeday.domain.com/\n\n# Freeday API URL\n# E.g. https://sub.domain.com/ or http://localhost:8787/\nAPI_PUBLIC_URL=https://freeday.domain.com/\n\n# Port on which Freeday API will run\nAPI_PORT=8787\n\n# Path to logs directory\nAPI_LOG_DIR=/var/log/freeday\n\n# Enable CORS on API\n# Required if running Freeday on localhost\n# Not recommended in production\n#API_ENABLE_CORS=false\n\n##\n## Database\n##\n\n# Mongo database URL\nMONGO_URL=mongodb://freeday-mongo:27017/freeday\n\n# Mongo test database URL\n# This database is used when running tests\n# Not required in production\n#MONGO_TEST_URL=mongodb://freeday-mongo:27017/freeday-test\n\n##\n## Slack bot\n##\n\n# If Slack bot should be enabled\nSLACK_ENABLED=true\n\n# Slack configuration\nSLACK_CLIENT_ID=1234567891234.1234567891234\nSLACK_CLIENT_SECRET=12345678912341234567891234\nSLACK_SIGNING_SECRET=abc123abc123abc123abc123abc123\nSLACK_ACCESS_TOKEN=xoxb-12345678-12345678-abc123abc123abc123abc123\n\n##\n## Dialogflow\n##\n\n# If Dialogflow NLU should be enabled\nDIALOGFLOW_ENABLED=false\n\n# Dialogflow configuration\n#DIALOGFLOW_KEYFILE=/path/to/keyfile.json\n#DIALOGFLOW_ENDPOINT=europe-west1-dialogflow.googleapis.com\n#DIALOGFLOW_PROJECT=my-project\n#DIALOGFLOW_LOCATION=europe-west1\n#DIALOGFLOW_ENVIRONMENT=production\n#DIALOGFLOW_USER=my-user\n#DIALOGFLOW_SESSION=1234\n#DIALOGFLOW_LANGUAGE=en\n")),(0,a.kt)("h2",{id:"production"},"Production"),(0,a.kt)("h3",{id:"reverse-proxy"},"Reverse proxy"),(0,a.kt)("p",null,"When deploying Freeday in production, it is recommended to have a single domain pointing to your server,\nand a reverse proxy distributing the app."),(0,a.kt)("p",null,"Let's say you're using this configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"FRONT_PUBLIC_URL=https://freeday.domain.com/\nAPI_PUBLIC_URL=https://freeday.domain.com/\n")),(0,a.kt)("p",null,"Then your Nginx reverse proxy configuration would look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-nginx"},"server {\n  listen 80;\n  listen [::]:80;\n\n  server_name freeday.domain.com;\n\n  return 301 https://$host$request_uri;\n}\n\nserver {\n  listen 443 ssl;\n  listen [::]:443 ssl;\n\n  server_name freeday.domain.com;\n\n  ssl_certificate /path/to/ssl/fullchain.pem;\n  ssl_certificate_key /path/to/ssl/privkey.pem;\n\n  # web client\n  location / {\n    proxy_pass http://127.0.0.1:8888;\n    proxy_http_version 1.1;\n    proxy_set_header Host $host;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_cache_bypass $http_upgrade;\n  }\n\n  # api\n  location ~ ^/api/ {\n    proxy_pass http://127.0.0.1:8787;\n    proxy_http_version 1.1;\n    proxy_set_header Host $host;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_cache_bypass $http_upgrade;\n  }\n}\n")),(0,a.kt)("h2",{id:"localhost"},"Localhost"),(0,a.kt)("p",null,"When running Freeday on localhost, some additional steps are required so everything works properly."),(0,a.kt)("h3",{id:"api-configuration"},"API configuration"),(0,a.kt)("p",null,"The front and API URLs must point on the correct localhost services, and CORS must be enabled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"FRONT_PUBLIC_URL=http://localhost:8788/\nAPI_PUBLIC_URL=http://localhost:8787/\nAPI_ENABLE_CORS=true\n")),(0,a.kt)("h3",{id:"slack-bot"},"Slack bot"),(0,a.kt)("p",null,"In a local environment, the Freeday URL will be something like ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:8788/"),".\nThe problem is that Slack API can't reach your Freeday instance through this URL.\nTherefore you need to setup some kind of proxy / tunnel and set the correct URL in the Slack app manifest so it ca communicates with your Freeday instance."),(0,a.kt)("p",null,"Here we're gonna use ",(0,a.kt)("a",{parentName:"p",href:"https://ngrok.com/"},"Ngrok"),"."),(0,a.kt)("h4",{id:"running-ngrok"},"Running Ngrok"),(0,a.kt)("p",null,"Start a Ngrok tunnel targetting the API port (default is ",(0,a.kt)("inlineCode",{parentName:"p"},"8787"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ngrok http 8787\n")),(0,a.kt)("p",null,"Then get the tunnel ",(0,a.kt)("inlineCode",{parentName:"p"},"https")," URL in the Ngrok console. It should look like this: ",(0,a.kt)("inlineCode",{parentName:"p"},"https://1234-12-34-123-12.ngrok.io"),"."),(0,a.kt)("h4",{id:"configuring-slack-app"},"Configuring Slack app"),(0,a.kt)("p",null,"Go in to the ",(0,a.kt)("a",{parentName:"p",href:"https://api.slack.com/apps"},"Slack apps page")," and edit your Freeday app."),(0,a.kt)("p",null,"Put the Ngrok ",(0,a.kt)("inlineCode",{parentName:"p"},"https")," link in the ",(0,a.kt)("inlineCode",{parentName:"p"},"oauth_config"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"event_subscriptions")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"interactivity")," sections. In the ",(0,a.kt)("inlineCode",{parentName:"p"},"event_subscriptions")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"interactivity")," sections, be sure to keep the ",(0,a.kt)("inlineCode",{parentName:"p"},"/api/slack/events")," path. Values should look like the example below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# ...\noauth_config:\n  redirect_urls:\n    - https://1234-12-34-123-12.ngrok.io/\n# ...\nsettings:\n  event_subscriptions:\n    request_url: https://1234-12-34-123-12.ngrok.io/api/slack/events\n# ...\n  interactivity:\n    request_url: https://1234-12-34-123-12.ngrok.io/api/slack/events\n# ...\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: The ",(0,a.kt)("inlineCode",{parentName:"p"},"event_subscriptions")," URL must be validated in Slack app configuration.\nTo activate the URL, Freeday must be running and listening to Slack API calls.")))}m.isMDXComponent=!0}}]);